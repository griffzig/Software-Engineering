package lab1out;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class ClientGUI1 extends JFrame
{
  // Data fields.
  private JLabel status;
  private JButton connect;
  private JButton submit;
  private JButton stop;
  private String[] labels = {"Client ID", "Server URL", "Server Port"};
  private JTextField[] textFields = new JTextField[labels.length];
  private JTextArea clientArea;
  private JTextArea serverArea;
	  

  // Constructor for the client GUI.
	public ClientGUI1(String title) {	
	  // Create the main variables that will be used.
	
	// JPanel mainPanel = new JPanel();
	
    JPanel north = new JPanel(new GridBagLayout());
    GridBagConstraints gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.anchor = GridBagConstraints.CENTER;
    gbc.insets = new Insets(5, 5, 5, 5);
    
    // Create Grid
 	for (int i = 0; i < labels.length; i++) {
 			
 		JLabel label = new JLabel(labels[i]);
 		north.add(label);
 			
 		textFields[i] = new JTextField();
 		north.add(textFields[i]);
 		}
 	    
    
    JPanel south = new JPanel();
    EventHandler handler = new EventHandler();
    
    // Set the title and default close operation.
    this.setTitle(title);
    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    
    // Create the status panel
    JPanel statusPanel = new JPanel();
    JLabel statusText = new JLabel("Status:");
    status = new JLabel("Not Connected");
    status.setForeground(Color.RED);
    statusPanel.add(statusText);
    statusPanel.add(status);
    
    north.add(statusPanel, gbc);
    gbc.gridy = 1;
    // Create the buttons.
    connect = new JButton("Connect");
    connect.addActionListener(handler);
    south.add(connect);
    submit = new JButton("Submit");
    submit.addActionListener(handler);
    south.add(submit);
    stop = new JButton("Stop");
    stop.addActionListener(handler);
    south.add(stop);
    
    // Add the north and south JPanels to the JFrame.
    this.add(north, BorderLayout.NORTH);
    this.add(south, BorderLayout.SOUTH);
    
    // Display the window.
    this.setSize(450, 450);
    this.setVisible(true);
	}
	
	// Main function for the client.
	public static void main(String[] args)
	{
	  // Create a ClientGUI object with the first command-line argument as its title.
		new ClientGUI1("Client 1");
	}
	
	// Class for handling events.
	class EventHandler implements ActionListener
	{
	  // Event handler for ActionEvent.
    public void actionPerformed(ActionEvent e)
    {
      // Display a message indicating which button was clicked.
      Object buttonClicked = e.getSource();
      if (buttonClicked == connect)
      {
        System.out.println("Connect Button Pressed");
      }
      else if (buttonClicked == submit)
      {
        System.out.println("Submit Button Pressed");
      }
      else if (buttonClicked == stop)
      {
        System.out.println("Stop Button Pressed");
      }
    }
	}
}
